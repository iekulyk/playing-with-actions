name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PythonVersion: 3.8
  DockerUsername: ikulyk404
  DockerImageName: kube2py

jobs:
  python-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PythonVersion }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PythonVersion }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        cd ../
        flake8 . --show-source --statistics

    - name: Check Complexity
      run: |
        cd ../
        flake8 . --exit-zero --max-complexity=10 --statistics

    - name: Test with pytest
      run: |
        pytest -v --cov-report=term-missing --cov=. --cov-report=json

    - name: Upload python artifacts
      if: ${{ github.ref_name == 'main' }}
      uses: actions/upload-artifact@v4
      with:
        name: python-artifacts
        path: ../src

    - name: Upload python artifacts
      if: ${{ github.ref_name == 'main' }}
      uses: actions/upload-artifact@v4
      with:
        name: python-artifacts
        path: ../helm-charts


  build-image:
    needs: python-ci
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: .

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DockerUsername }}
        password: ${{ secrets.DOCKER_HUB_SECRET }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./src
        push: true
        tags: ${{ env.DockerUsername }}/${{ env.DockerImageName }}:${{ github.sha }}

  helm-ci:
    needs: build-image
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: .

    # - name: Set up Helm
    #   uses: azure/setup-helm@v4.2.0

    # - name: Lint Helm
    #   run: helm lint ./helm-charts/kube2py

    # - name: Template Helm
    #   run: helm template kube2py ./helm-charts/kube2py -f ./helm-charts/kube2py/values.yaml

    # - name: Package Helm
    #   run: helm package ./helm-charts/kube2py

    # - name: Upload Helm artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: helm-artifacts
    #     path: ./*.tgz